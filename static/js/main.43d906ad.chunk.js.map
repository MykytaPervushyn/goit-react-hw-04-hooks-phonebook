{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","contactForm","this","formWrap","label","input","type","onChange","pattern","title","required","button","Component","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","App","filter","formSubmitHandler","contact","uuidv4","find","alert","changeFilter","getFiltredContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","console","log","localStorage","getItem","parcedContacts","JSON","parse","prevProps","setItem","stringify","filtredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43d906ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__3IG6W\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\r\n        <div className={s.formWrap}>\r\n          <label className={s.label}>\r\n            Name{' '}\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number{' '}\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        {name}: {number}\r\n        <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input className={s.input} type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  formSubmitHandler = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      // ...data,\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (this.state.contacts.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else if (this.state.contacts.find(contact => contact.number === number)) {\r\n      return alert(`${number} is already in contacts`);\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getFiltredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\n  deleteContact = contactId =>\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n    }));\r\n\r\n  componentDidMount() {\r\n    console.log('App copmonent did mount')\r\n\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parcedContacts = JSON.parse(contacts);\r\n\r\n    if (parcedContacts) {\r\n      this.setState({contacts: parcedContacts})\r\n    }\r\n  };\r\n  \r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log('App copmonent did update')\r\n\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      console.log('Оновилося поле contacts')\r\n\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const filtredContacts = this.getFiltredContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.formSubmitHandler} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n        <ContactList contacts={filtredContacts} onDeleteContact={this.deleteContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__29KHH\",\"formWrap\":\"ContactForm_formWrap__3tPEc\",\"label\":\"ContactForm_label__1OcY8\",\"input\":\"ContactForm_input__obGBb\",\"button\":\"ContactForm_button__3mF_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1MLO9\",\"input\":\"Filter_input__1LVIx\"};"],"sourceRoot":""}